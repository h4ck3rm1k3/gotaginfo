// GENERATED BY dbtogo (github.com/kdar/dbtogo); DO NOT EDIT
// ---args: /home/h4ck3rm1k3/goroot_sql/bin/kdb sqlite3 taginfo-master.db
package model

type Arger interface {
  Args() []interface{}
}

var InsertStmts = map[string]string{
  "Languages":       "INSERT INTO Languages (Code,Iso6391,Englishname,Nativename,Wikikeypages,Wikitagpages) VALUES (?, ?, ?, ?, ?, ?)",
  "Sources":         "INSERT INTO Sources (No,Visible,Id,Name,Updatestart,Updateend,Datauntil) VALUES (?, ?, ?, ?, ?, ?, ?)",
  "Masterstats":     "INSERT INTO Masterstats (Key,Value) VALUES (?, ?)",
  "Toptags":         "INSERT INTO Toptags (Skey,Svalue,Countall,Countnodes,Countways,Countrelations,Inwiki,Inprojects) VALUES (?, ?, ?, ?, ?, ?, ?, ?)",
  "Popularkeys":     "INSERT INTO Popularkeys (Key,Count,Users,Wikipages,Inwiki,Scalecount,Scaleusers,Scalewiki,Scalename,Scale1,Scale2) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)",
  "Popularmetadata": "INSERT INTO Popularmetadata (Keys,Countmin,Countmax,Countdelta,Usersmin,Usersmax,Usersdelta) VALUES (?, ?, ?, ?, ?, ?, ?)",
  "Suggestions":     "INSERT INTO Suggestions (Key,Value,Count,Inwiki,Score) VALUES (?, ?, ?, ?, ?)",
  "Sqlitestat1":     "INSERT INTO Sqlitestat1 (Tbl,Idx,Stat) VALUES (?, ?, ?)",
}
var SelectStmts = map[string]string{
  "Languages":       "SELECT Code,Iso6391,Englishname,Nativename,Wikikeypages,Wikitagpages FROM Languages",
  "Sources":         "SELECT No,Visible,Id,Name,Updatestart,Updateend,Datauntil FROM Sources",
  "Masterstats":     "SELECT Key,Value FROM Masterstats",
  "Toptags":         "SELECT Skey,Svalue,Countall,Countnodes,Countways,Countrelations,Inwiki,Inprojects FROM Toptags",
  "Popularkeys":     "SELECT Key,Count,Users,Wikipages,Inwiki,Scalecount,Scaleusers,Scalewiki,Scalename,Scale1,Scale2 FROM Popularkeys",
  "Popularmetadata": "SELECT Keys,Countmin,Countmax,Countdelta,Usersmin,Usersmax,Usersdelta FROM Popularmetadata",
  "Suggestions":     "SELECT Key,Value,Count,Inwiki,Score FROM Suggestions",
  "Sqlitestat1":     "SELECT Tbl,Idx,Stat FROM Sqlitestat1",
}

type Languages struct {
  Code         string
  Iso6391      string
  Englishname  string
  Nativename   string
  Wikikeypages int64
  Wikitagpages int64
}

func (t *Languages) Args() []interface{} {
  return []interface{}{&t.Code, &t.Iso6391, &t.Englishname, &t.Nativename, &t.Wikikeypages, &t.Wikitagpages}
}

type Sources struct {
  No          int64
  Visible     int64
  Id          string
  Name        string
  Updatestart string
  Updateend   string
  Datauntil   string
}

func (t *Sources) Args() []interface{} {
  return []interface{}{&t.No, &t.Visible, &t.Id, &t.Name, &t.Updatestart, &t.Updateend, &t.Datauntil}
}

type Masterstats struct {
  Key   string
  Value string
}

func (t *Masterstats) Args() []interface{} { return []interface{}{&t.Key, &t.Value} }

type Toptags struct {
  Skey           string
  Svalue         string
  Countall       int64
  Countnodes     int64
  Countways      int64
  Countrelations int64
  Inwiki         int64
  Inprojects     int64
}

func (t *Toptags) Args() []interface{} {
  return []interface{}{&t.Skey, &t.Svalue, &t.Countall, &t.Countnodes, &t.Countways, &t.Countrelations, &t.Inwiki, &t.Inprojects}
}

type Popularkeys struct {
  Key        string
  Count      int64
  Users      int64
  Wikipages  int64
  Inwiki     int64
  Scalecount float64
  Scaleusers float64
  Scalewiki  float64
  Scalename  float64
  Scale1     float64
  Scale2     float64
}

func (t *Popularkeys) Args() []interface{} {
  return []interface{}{&t.Key, &t.Count, &t.Users, &t.Wikipages, &t.Inwiki, &t.Scalecount, &t.Scaleusers, &t.Scalewiki, &t.Scalename, &t.Scale1, &t.Scale2}
}

type Popularmetadata struct {
  Keys       int64
  Countmin   int64
  Countmax   int64
  Countdelta int64
  Usersmin   int64
  Usersmax   int64
  Usersdelta int64
}

func (t *Popularmetadata) Args() []interface{} {
  return []interface{}{&t.Keys, &t.Countmin, &t.Countmax, &t.Countdelta, &t.Usersmin, &t.Usersmax, &t.Usersdelta}
}

type Suggestions struct {
  Key    string
  Value  string
  Count  int64
  Inwiki int64
  Score  int64
}

func (t *Suggestions) Args() []interface{} {
  return []interface{}{&t.Key, &t.Value, &t.Count, &t.Inwiki, &t.Score}
}

type Sqlitestat1 struct {
  Tbl  string
  Idx  string
  Stat string
}

func (t *Sqlitestat1) Args() []interface{} { return []interface{}{&t.Tbl, &t.Idx, &t.Stat} }
